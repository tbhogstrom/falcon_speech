---
import Layout from '../../layouts/Layout.astro';

const areasOfConcern = [
  { value: "speech", label: "Speech (e.g. sound errors, difficult to understand)" },
  { value: "language", label: "Language (e.g. limited vocabulary, grammatical errors)" },
  { value: "speech-language", label: "Speech & Language" },
  { value: "stuttering", label: "Stuttering/Fluency" },
  { value: "early-intervention", label: "Early Intervention (0-5)" },
  { value: "communication-devices", label: "Communication Devices (e.g. nonspeaking children)" },
  { value: "literacy", label: "Literacy (e.g. concerns about dyslexia and literacy)" },
  { value: "other", label: "Other" }
];

const requestTypes = [
  { value: "screening", label: "Free Screening Consultation (15-20 min phone call)" },
  { value: "evaluation", label: "Schedule In-Home Evaluation" },
  { value: "general", label: "General Questions or Information" }
];
---

<Layout title="Contact Us & Free Screening | Falcon Speech Services">
  <div class="max-w-7xl mx-auto">
    <!-- Header -->
    <div class="text-center mb-12">
      <h1 class="text-4xl font-bold text-gray-900 mb-4">Contact Us</h1>
      <p class="text-lg text-gray-600 max-w-3xl mx-auto">
        Request a free screening consultation, schedule an evaluation, or get answers to your questions
      </p>
    </div>

    <!-- Free Screening Info -->
    <div class="bg-gradient-to-r from-blue-50 to-green-50 rounded-xl p-8 mb-12">
      <div class="max-w-4xl mx-auto">
        <div class="text-center mb-8">
          <h2 class="text-3xl font-bold text-gray-900 mb-4">Not sure if your child needs speech therapy?</h2>
          <p class="text-xl text-gray-600 mb-6">Let's talk.</p>
          <p class="text-lg text-gray-600">
            We offer free, no-pressure phone consultations to help you decide whether a speech screening or evaluation is the right next step.
          </p>
        </div>
        
        <div class="grid md:grid-cols-3 gap-6">
          <div class="text-center">
            <div class="bg-blue-100 p-4 rounded-full w-16 h-16 mx-auto mb-4 flex items-center justify-center">
              <svg class="w-8 h-8 text-blue-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"></path>
              </svg>
            </div>
            <h3 class="font-semibold text-gray-900 mb-2">Learn About Your Concerns</h3>
            <p class="text-sm text-gray-600">We'll listen to your specific questions and observations</p>
          </div>
          
          <div class="text-center">
            <div class="bg-green-100 p-4 rounded-full w-16 h-16 mx-auto mb-4 flex items-center justify-center">
              <svg class="w-8 h-8 text-green-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"></path>
              </svg>
            </div>
            <h3 class="font-semibold text-gray-900 mb-2">Get Expert Guidance</h3>
            <p class="text-sm text-gray-600">Professional answers to help clarify your next steps</p>
          </div>
          
          <div class="text-center">
            <div class="bg-purple-100 p-4 rounded-full w-16 h-16 mx-auto mb-4 flex items-center justify-center">
              <svg class="w-8 h-8 text-purple-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4m0 0L9 7"></path>
            </svg>
            </div>
            <h3 class="font-semibold text-gray-900 mb-2">Find the Right Path</h3>
            <p class="text-sm text-gray-600">Whether it's screening, evaluation, or just monitoring</p>
          </div>
        </div>
        
        <div class="text-center mt-8">
          <p class="text-gray-600 italic">Sometimes a quick conversation is all it takes to bring clarity and peace of mind.</p>
        </div>
      </div>
    </div>

    <div class="bg-white shadow-lg rounded-lg overflow-hidden">
      <!-- Success Message -->
      <div id="success-message" class="hidden bg-green-50 border border-green-200 rounded-lg p-4 m-8 mb-0">
        <div class="flex">
          <div class="flex-shrink-0">
            <svg class="h-5 w-5 text-green-400" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
            </svg>
          </div>
          <div class="ml-3">
            <h3 class="text-sm font-medium text-green-800">Message sent successfully!</h3>
            <p class="text-sm text-green-700 mt-1">Thank you for contacting us. We'll get back to you soon.</p>
          </div>
        </div>
      </div>

      <!-- Error Message -->
      <div id="error-message" class="hidden bg-red-50 border border-red-200 rounded-lg p-4 m-8 mb-0">
        <div class="flex">
          <div class="flex-shrink-0">
            <svg class="h-5 w-5 text-red-400" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
            </svg>
          </div>
          <div class="ml-3">
            <h3 class="text-sm font-medium text-red-800">Error sending message</h3>
            <p class="text-sm text-red-700 mt-1" id="error-text">Please try again or contact us directly.</p>
          </div>
        </div>
      </div>

      <form id="contact-form" class="p-8 space-y-6">
        <!-- Parent Information -->
        <div class="border-b border-gray-200 pb-6">
          <h3 class="text-lg font-medium text-gray-900 mb-4">Parent/Guardian Information</h3>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label for="parent-first-name" class="block text-sm font-medium text-gray-700">Parent First Name</label>
              <input
                type="text"
                id="parent-first-name"
                name="parent-first-name"
                required
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50"
              />
            </div>
            <div>
              <label for="parent-last-name" class="block text-sm font-medium text-gray-700">Parent Last Name</label>
              <input
                type="text"
                id="parent-last-name"
                name="parent-last-name"
                required
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50"
              />
            </div>
          </div>
        </div>

        <!-- Child Information -->
        <div class="border-b border-gray-200 pb-6">
          <h3 class="text-lg font-medium text-gray-900 mb-4">Child Information</h3>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label for="child-first-name" class="block text-sm font-medium text-gray-700">Child First Name</label>
              <input
                type="text"
                id="child-first-name"
                name="child-first-name"
                required
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50"
              />
            </div>
            <div>
              <label for="child-last-name" class="block text-sm font-medium text-gray-700">Child Last Name</label>
              <input
                type="text"
                id="child-last-name"
                name="child-last-name"
                required
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50"
              />
            </div>
          </div>
        </div>

        <!-- Contact Information -->
        <div class="border-b border-gray-200 pb-6">
          <h3 class="text-lg font-medium text-gray-900 mb-4">Contact Information</h3>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
              <input
                type="email"
                id="email"
                name="email"
                required
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50"
              />
            </div>
            <div>
              <label for="phone" class="block text-sm font-medium text-gray-700">Phone Number</label>
              <input
                type="tel"
                id="phone"
                name="phone"
                required
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50"
              />
            </div>
          </div>
        </div>

        <!-- Request Type -->
        <div class="border-b border-gray-200 pb-6">
          <h3 class="text-lg font-medium text-gray-900 mb-4">What can we help you with?</h3>
          <div class="space-y-3">
            {requestTypes.map(type => (
              <label class="flex items-start">
                <input
                  type="radio"
                  name="request-type"
                  value={type.value}
                  required
                  class="mt-1 h-4 w-4 text-primary focus:ring-primary border-gray-300"
                />
                <span class="ml-3 text-sm text-gray-700">{type.label}</span>
              </label>
            ))}
          </div>
        </div>

        <!-- Child Age (conditional) -->
        <div id="child-age-section" class="border-b border-gray-200 pb-6 hidden">
          <h3 class="text-lg font-medium text-gray-900 mb-4">Child's Age</h3>
          <div>
            <label for="child-age" class="block text-sm font-medium text-gray-700">Age</label>
            <input
              type="text"
              id="child-age"
              name="child-age"
              placeholder="e.g., 3 years old"
              class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50"
            />
          </div>
        </div>

        <!-- Area of Concern -->
        <div>
          <label for="area-of-concern" class="block text-sm font-medium text-gray-700 mb-2">Area of Concern</label>
          <select
            id="area-of-concern"
            name="area-of-concern"
            required
            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50"
          >
            <option value="">Select an area of concern</option>
            {areasOfConcern.map(area => (
              <option value={area.value}>{area.label}</option>
            ))}
          </select>
        </div>

        <!-- Other text box (hidden by default) -->
        <div id="other-concern-box" class="hidden">
          <label for="other-concern" class="block text-sm font-medium text-gray-700">Please specify other concern</label>
          <textarea
            id="other-concern"
            name="other-concern"
            rows="3"
            class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50"
            placeholder="Please describe your specific concern..."
          ></textarea>
        </div>

        <div class="flex justify-end">
          <button
            type="submit"
            id="submit-button"
            class="inline-flex justify-center py-3 px-6 border border-transparent shadow-sm text-base font-medium rounded-md text-white bg-primary hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary disabled:opacity-50 disabled:cursor-not-allowed"
          >
            <span id="submit-text">Send Message</span>
            <svg id="loading-spinner" class="hidden animate-spin -mr-1 ml-3 h-5 w-5 text-white" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
          </button>
        </div>
      </form>
    </div>
  </div>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contact-form');
    const submitButton = document.getElementById('submit-button');
    const submitText = document.getElementById('submit-text');
    const loadingSpinner = document.getElementById('loading-spinner');
    const successMessage = document.getElementById('success-message');
    const errorMessage = document.getElementById('error-message');
    const errorText = document.getElementById('error-text');
    const areaOfConcernSelect = document.getElementById('area-of-concern');
    const otherConcernBox = document.getElementById('other-concern-box');
    const otherConcernField = document.getElementById('other-concern');
    const requestTypeRadios = document.querySelectorAll('input[name="request-type"]');
    const childAgeSection = document.getElementById('child-age-section');
    const childAgeField = document.getElementById('child-age');

    // Handle "Other" selection
    areaOfConcernSelect.addEventListener('change', function() {
      if (this.value === 'other') {
        otherConcernBox.classList.remove('hidden');
        otherConcernField.required = true;
      } else {
        otherConcernBox.classList.add('hidden');
        otherConcernField.required = false;
        otherConcernField.value = '';
      }
    });

    // Handle request type selection
    requestTypeRadios.forEach(radio => {
      radio.addEventListener('change', function() {
        if (this.value === 'screening') {
          childAgeSection.classList.remove('hidden');
          childAgeField.required = true;
        } else {
          childAgeSection.classList.add('hidden');
          childAgeField.required = false;
          childAgeField.value = '';
        }
      });
    });

    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      // Show loading state
      submitButton.disabled = true;
      submitText.textContent = 'Sending...';
      loadingSpinner.classList.remove('hidden');
      successMessage.classList.add('hidden');
      errorMessage.classList.add('hidden');
      
      try {
        // Prepare form data
        const formData = new FormData(form);
        
        // Submit to API
        const response = await fetch('/api/contact', {
          method: 'POST',
          body: formData
        });
        
        const result = await response.json();
        
        if (result.success) {
          // Show success message
          successMessage.classList.remove('hidden');
          form.reset();
          
          // Hide conditional fields on reset
          otherConcernBox.classList.add('hidden');
          otherConcernField.required = false;
          childAgeSection.classList.add('hidden');
          childAgeField.required = false;
          
          // Scroll to success message
          successMessage.scrollIntoView({ behavior: 'smooth', block: 'center' });
        } else {
          throw new Error(result.error || 'Failed to submit form');
        }
        
      } catch (error) {
        console.error('Form submission error:', error);
        errorText.textContent = error.message || 'Please try again or contact us directly.';
        errorMessage.classList.remove('hidden');
        
        // Scroll to error message
        errorMessage.scrollIntoView({ behavior: 'smooth', block: 'center' });
      } finally {
        // Reset button state
        submitButton.disabled = false;
        submitText.textContent = 'Send Message';
        loadingSpinner.classList.add('hidden');
      }
    });
  });
</script>